# Prepare /etc/hosts file
# -----------------------
- name: Register the short name of the host
  shell: "hostname -s"
  register: short_hostname

- name: Register the full name of the host
  shell: "cat /etc/hostname"
  register: full_hostname

- name: Ensure /etc/hosts includes localhost definition
  lineinfile:
    dest=/etc/hosts
    regexp='^127\.0\.0\.1'
    line="127.0.0.1 {{ full_hostname.stdout }} {{ short_hostname.stdout }} localhost localhost.localdomain localhost4.localdomain4"

# Prepare RHOSP repos
# -------------------
- name: Ensure no repos are installed on the host
  shell: rm -rf /etc/yum.repos.d/*

# At this point, Ansible doesn't support 'yum localinstall' so this will not work using 'yum' module
- name: Install release tool
  shell: "yum localinstall -y http://rhos-release.virt.bos.redhat.com/repos/rhos-release/rhos-release-latest.noarch.rpm"

- name: Install RHOSP 8 puddle repos (execute rhos-release)
  shell: "rhos-release 8-director"
  when: repo_version == 'puddle'

- name: Install RHOSP 8 poodle repos (execute rhos-release)
  shell: "rhos-release -d 8-director"
  when: repo_version == 'poodle'

- name: Update all packages on undercloud
  yum:
    name=*
    state=latest

- name: Install IPMI, git, wget and passlib
  yum:
    name="{{ item }}"
    state=latest
  with_items:
    - git
    - OpenIPMI
    - OpenIPMI-tools
    - python-passlib
    - python-tripleoclient
    - wget

# Prepare instackenv.json
# -----------------------
- name: Download instackenv validator
  git:
    repo="https://github.com/rthallisey/clapper.git"
    dest="/home/stack/clapper"

- name: Copy instackenv.json to stack home dir
  shell: "cp instackenv.json /home/stack/"

- name: Validate instackenv.json
  args:
    chdir: "/home/stack"
  shell: "python clapper/instackenv-validator.py -f /home/stack/instackenv.json"
  register: instackenv_validator_result

- name: Fail run if instackenv validation failed
  fail:
    msg="istackenv.json validation failed!"
  when: instackenv_validator_result.stdout.find('SUCCESS') == -1

- name: Get the number of overcloud nodes
  shell: |
    export IP_LENGTH=(`cat /home/stack/instackenv.json | grep -o 'pm_addr.*' | cut -f2-  -d':' | wc -l`);
    echo $(($IP_LENGTH))
  register: overcloud_nodes_count
